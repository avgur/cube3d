var activateCubeRun=function(){function support(props){for(var i=0,l=props.length;l>i;i++)if("undefined"!=typeof el.style[props[i]])return props[i]}var el=document.createElement("div"),transformProps="transform WebkitTransform MozTransform OTransform msTransform".split(" "),transformProp=support(transformProps),transitionDuration="transitionDuration WebkitTransitionDuration MozTransitionDuration OTransitionDuration msTransitionDuration".split(" "),transitionDurationProp=support(transitionDuration),mouse={start:{}},touch=void 0!==document.ontouchmove,viewport={x:0,y:0,el:$(".cube")[0],move:function(coords){coords&&("number"==typeof coords.x&&(this.x=coords.x),"number"==typeof coords.y&&(this.y=coords.y)),this.el.style[transformProp]="rotateX("+this.x+"deg) rotateY("+this.y+"deg)"},reset:function(){this.move({x:0,y:0})}};viewport.duration=function(){var d=touch?50:500;return viewport.el.style[transitionDurationProp]=d+"ms",d}(),$(document).keydown(function(evt){switch(evt.keyCode){case 37:viewport.move({y:viewport.y-90});break;case 38:evt.preventDefault(),viewport.move({x:viewport.x+90});break;case 39:viewport.move({y:viewport.y+90});break;case 40:evt.preventDefault(),viewport.move({x:viewport.x-90});break;case 27:viewport.reset()}}),$(document).bind("mousedown touchstart",function(evt){return delete mouse.last,$(evt.target).is("a, iframe")?!0:(evt.originalEvent.touches?evt=evt.originalEvent.touches[0]:null,mouse.start.x=evt.pageX,mouse.start.y=evt.pageY,$(document).bind("mousemove touchmove",function(event){touch&&event.originalEvent&&event.originalEvent.touches.length>1||(event.preventDefault(),event.originalEvent.touches?event=event.originalEvent.touches[0]:null,$(".viewport").trigger("move-viewport",{x:event.pageX,y:event.pageY}))}),void $(document).bind("mouseup touchend",function(){$(document).unbind("mousemove touchmove")}))}),$(".viewport").bind("move-viewport",function(evt,movedMouse){function forward(v1,v2){return v1>=v2}var movementScaleFactor=touch?4:1;mouse.last?(forward(mouse.start.x,mouse.last.x)!=forward(mouse.last.x,movedMouse.x)&&(mouse.start.x=mouse.last.x),forward(mouse.start.y,mouse.last.y)!=forward(mouse.last.y,movedMouse.y)&&(mouse.start.y=mouse.last.y)):mouse.last=mouse.start,viewport.move({x:viewport.x+parseInt((mouse.start.y-movedMouse.y)/movementScaleFactor),y:viewport.y-parseInt((mouse.start.x-movedMouse.x)/movementScaleFactor)}),mouse.last.x=movedMouse.x,mouse.last.y=movedMouse.y})};